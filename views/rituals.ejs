<!doctype html>
<html>
<% include partials/head %>
<body>
  <div id='content' />
  <% include partials/scripts %>
</body>
<script type="text/babel">
var colors = [
  { name: 'Red', tag:'red' },
  { name: 'Blue', tag:'blue' },
  { name: 'Black', tag:'black' },
  { name: 'Green', tag:'green' },
];
var ColorList = React.createClass(
  {
    render: function(){
       var self = this;
       return (
         <form >
         {this.props.colors.map(function(color){
           return (
             <div key={color.name}>
             <label for='color-{color-name}' style={{color:color.tag}} >{color.name}</label>
             <input name='color-{color.name}' value={color.quantity} onChange={self.handleChange.bind(self, color.name)}/>
             </div>
             );}
         )}
         </form>
       );
    },
    handleChange: function(colorName, event){
      this.props.onQuantityChange(colorName, event.target.value);
    },
  }
);
var PullList = React.createClass({
    render: function() {
      return (
        <ul>
        {this.props.colors.map(function(color){
          return (
            <li key={color.name}>{color.name},{color.quantity}</li>
          )})}
       </ul>
      );
    }
  });

var RitualsApp = React.createClass({
  getInitialState: function() {
    return {
      pulls: [],
      colorQuantities: this.props.colors.map(function(color){return { name:color.name, tag:color.tag, quantity:0 };})
    };
  },

  onQuantityChange: function (colorName, quantity){
        this.state.colorQuantities.filter(function(color){ return color.name == colorName}).forEach(function(color){color.quantity = quantity});
        this.setState({
          colorQuantities: this.state.colorQuantities
        });
      },
  render: function() {
    return (
      <div class='row'>
        <h4>Ritual Pulls</h4>
        <ColorList colors={this.state.colorQuantities} onQuantityChange={this.onQuantityChange} />
        <PullList colors={this.state.colorQuantities} />
      </div>
    )},
});

ReactDOM.render(<RitualsApp colors={colors} />, document.getElementById('content'));

var rand = function(min, max) {
    return Math.random() * (max - min) + min;
};

var getRandomItem = function(list, weight) {
    var total_weight = weight.reduce(function (prev, cur, i, arr) {
        return prev + cur;
    });

    var random_num = rand(0, total_weight);
    var weight_sum = 0;
    //console.log(random_num)

    for (var i = 0; i < list.length; i++) {
        weight_sum += weight[i];
        weight_sum = +weight_sum.toFixed(2);

        if (random_num <= weight_sum) {
            return list[i];
        }
    }

    // end of function
};
</script>
</html>
